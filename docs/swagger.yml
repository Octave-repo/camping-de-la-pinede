openapi: '3.0.2'
info:
  title: API Title
  version: '1.2'
servers:
  - url: http://localhost:8080
tags:
  - name: utilisateurs
    description: Gestion de l'utilisateur 
  - name: campings
    description: Gestion du camping
  - name: reservations
    description: Gestion des réservations
  - name: avis
    description: Les avis sur un camping
  - name: notes
    description: Ajout de notes sur un camping
  - name: activites
    description: Gestion des activité/publicités


paths:
  /utilisateurs/{id}:
    get:
      tags:
        - utilisateurs
      summary: Récupération d'un client via son id
      description: Récupération d'un client via son id
      operationId: getUtilisateurById
      parameters:
        - name: id
          in: path
          description: Identifiant de l'utilisateur
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUtilsateurResponse'
  /utilisateurs:
    post:
      tags:
        - utilisateurs
      summary: Création d'un nouveau client
      description: Création d'un nouveau client
      operationId: createUtilisateur
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/PostUtilisateurRequest'
      responses:
        204:
          description: Le client a été crée
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/GetUtilsateurResponse'
    put:
      tags: 
        - utilisateurs
      summary: Mise à jour d'un utilisateur
      description: Mise à jour d'un utilisateur
      operationId: updateUtilisateur
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/GetUtilsateurResponse'
      responses:
        200:
          description: Le client a été mis à jour
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/GetUtilsateurResponse'
  /campings/{id}:
    get:
      tags:
        - campings
      summary: Obtenir un camping par son identifiant
      description: Obtenir un camping par son identifiant
      operationId: getCampingById
      parameters:
        - name: id
          in: path
          required: true
          description: Identifiant du camping
          schema: 
            type: integer
            format: long
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampingResponse'
        404:
          description: NOT FOUND
        
  /campings:
    get:
      tags:
        - campings
      summary: Obtenir une liste de campings
      description: Retourne une liste de campings selon des filtres
      operationId: getCampings
      parameters:
        - name: note
          in: query
          description: Note minimale du camping
          required: false
          schema:
            type: number
            format: double
        - name: prix
          in: query
          description: Prix maximum du camping
          required: false
          schema: 
            type: number
            format: double
        - name: longi
          in: query
          description: Longitude de la position
          required: false
          schema:
            type: number
            format: double
        - name: lati
          in: query
          description: Latitude de la position
          required: false
          schema: 
            type: number
            format: double
        - name: distance
          in: query
          description: Distance max du camping (en fonction de lonti et lati)
          required: false
          schema  :
            type: number
            format: double
        - name: isFull
          in: query
          description: Determine si oui ou non on renvoie les campings pleins
          required: false
          schema:
            type: boolean
            default: false
        - name: equipements
          in: query
          description: Liste des équipements
          required: false
          schema:
            type: array
        - name: logements
          in: query
          description: Liste des logements
          required: false
          schema:
            type: array
        - name: nbEtoiles
          in: query
          description: Nombre minimal d'étoiles
          required: false
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampingsResponse'
    post:
      tags:
        - campings
      summary: Création d'un camping
      description: Création d'un camping
      operationId: postCamping
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/PostCampingRequest'
      responses:
        204:
          description: Le camping a bien été crée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampingResponse'
    put:
      tags:
        - campings
      summary: Mise à jour d'un camping
      description: Mise à jour d'un camping
      operationId: putCamping
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/GetCampingResponse'
      responses:
        200:
          description: Le camping a bien été mis à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampingResponse'
  
  /campings/{id}/avis:
    get :
      tags: 
        - campings
        - avis
      description: Obtenir les avis d'un camping
      summary: Retourne une liste des avis d'un camping
      parameters:
        - name: id
          in: path
          required: true
          description: Identifiant du camping
          schema:
            type: number
            format: long
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAvisResponse'
    post:
      tags:
        - campings
        - avis
      summary: Ajoute un avis sur un camping particulier
      description: Ajoute un avis sur un camping particulier
      parameters:
        - name: id
          in: path
          required: true
          description: Identifiant du camping
          schema:
            type: number
            format: long
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAviRequest'
      responses:
        204:
          description: L'avis à bien été crée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAviResponse'
  
  /campings/{id}/notes:
    post:
      tags:
        - campings
        - notes
      summary: Ajoute une note sur un camping
      description: Ajoute une note sur un camping
      parameters:
        - name: id
          in: path
          required: true
          description: Identifiant du camping
          schema:
            type: number
            format: long
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNoteRequest'
      responses:
        204:
          description: La note a bien été ajoutée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNoteRequest'
  
  /reservations:
    post:
      tags:
        - reservations
      summary: Création d'un réservations
      description: Création d'un réservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReservationRequest'
      responses:
        204:
          description: La réservations a bien été faite
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationResponse'
  
  /reservations/utilisateurs/{id}:
    get:
      tags:
        - reservations
        - utilisateurs
      summary: Récupère toutes les réservations d'un utilisateur
      description: Récupère toutes les réservations d'un utilisateur
      parameters:
        - name: id
          in: path
          required: true
          description: Identifiant de l'utilisateur
          schema:
            type: number
            format: long
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationsOfUtilisateurResponse'
        404:
          description: L'utilisateur n'existe pas
  
  /reservations/campings/{id}:
    get:
      tags:
        - reservations
        - campings
      summary: Récupère toutes les réservations d'un camping
      description: Récupère toutes les réservations d'un camping
      parameters:
        - name: id
          in: path
          required: true
          description: Identifiant du camping
          schema:
            type: number
            format: long
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationsOfCampingResponse'
        404:
          description: Le camping n'existe pas
  /campings/equipements:
    get:
      tags:
        - campings
      summary: Liste de tous les types d'équipements existant.
      description: Récupère la liste (statique) de tout les types d'équipements
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEquipementsResponse"

  /campings/logements:
    get:
      tags:
        - campings
      summary: Liste de tous les types de logements existant.
      description: Récupère la liste (statique) de tout les types de logements
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLogementsResponse"
  /activite:
    get:
      tags:
        - activites
      summary: Récupère une pub aléatoire
      description: Récupère une pub aléatoire ciblée si on utilise
      parameters:
        - name: longi
          in: query
          description: Longitude de la position de l'utilisateur
          required: false
          schema:
            type: number
            format: double
        - name: lati
          in: query
          description: Latitude de la position de l'utilisateur
          required: false
          schema: 
            type: number
            format: double
      responses:
        200:
          description: OK
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetActivite'
    post:
      tags:
        - activites
      summary: Création d'une activité
      description: Création d'une activité
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostActivite'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivite'


components:
  schemas:
    GPSLocationResponse:
      type: object
      properties:
        nom:
          type: string
          format: string
          example: 'Valenciennes'
        latitude:
          type: number
          format: double
          example: 50.349998
        longitude:
          type: number
          format: double
          example: 3.53333
    GetUtilsateurResponse:
      type: object
      properties:
        id: 
          type: number
          format: long
          example: 1
        nomUtilisateur:
          type: string
          format: string
          example: 'John Doe'
        numeroTelephone: 
          type: string
          format: string
          example: '+33600000000'
        adresseMail: 
          type: string
          format: string
          example: 'john.doe@example.com'
        adresse:
          $ref: '#/components/schemas/GPSLocationResponse'
    PostUtilisateurRequest:
      type: object
      properties:
        nomUtilisateur:
          type: string
          format: string
          example: 'John Doe'
        numeroTelephone: 
          type: string
          format: string
          example: '+33600000000'
        adresseMail: 
          type: string
          format: string
          example: 'john.doe@example.com'
        adresse:
          $ref: '#/components/schemas/GPSLocationResponse'
    GetCampingResponse:
      type: object
      properties:
        id: 
          type: number
          format: long
          example: 1
        nom:
          type: string
          format: string
          example: 'Camping des Pinèdes de Valenciennes'
        prix:
          type: number
          format: double
          example: 10
        emplacementLibres:
          type: integer
          format: integer
          example: 1
        note:
          type: number
          format: double
          example: 8.5
        numeroTelephone:
          type: string
          example: +33300000000
        adresseMail:
          type: string
          example: 'camping.valenciennes@pinedes.com'
        equipement:
          type: array
          items: 
            type: string
            example: MACHINE_A_LAVER
        typesLogements:
          type: array
          items:
            type: string
            example: MOBILE_HOME
        nombreEtoiles:
          type: integer
          example: 2
        adresse:
          $ref: '#/components/schemas/GPSLocationResponse'
    GetCampingsResponse:
      type: array
      items:
        $ref: '#/components/schemas/GetCampingResponse'
    PostCampingRequest:
      type: object
      properties:
        nom:
          type: string
          format: string
          example: 'Camping des Pinèdes de Valenciennes'
        prix:
          type: number
          format: double
          example: 10
        emplacementLibres:
          type: integer
          format: integer
          example: 1
        note:
          type: number
          format: double
          example: 8.5
        numeroTelephone:
          type: string
          example: +33300000000
        adresseMail:
          type: string
          example: 'camping.valenciennes@pinedes.com'
        equipement:
          type: array
          items: 
            type: string
            example: MACHINE_A_LAVER
        typesLogements:
          type: array
          items:
            type: string
            example: MOBILE_HOME
        nombreEtoiles:
          type: integer
          example: 2
        adresse:
          $ref: '#/components/schemas/GPSLocationResponse'
    GetAviResponse:
      type: object
      properties:
        id:
          type: number
          format: long
          example: 1
        titre:
          type: string
          example: J'ai bien aimé
        contenu:
          type: string
          example: Très bon camping proche de la fameuse plage Valenciennoise
    GetAvisResponse:
      type: array
      items:
        $ref: '#/components/schemas/GetAviResponse'
    PostAviRequest:
      type: object
      properties:
        titre:
          type: string
          example: J'ai bien aimé
        contenu:
          type: string
          example: Très bon camping proche de la fameuse plage Valenciennoise
    PostNoteRequest:
      type: object
      properties:
        note:
          type: number
          format: double
          example: 7.4
    PostReservationRequest:
      type: object
      properties:
        idCamping:
          type: number
          format: long
          example: 1
        idUtilisateur:
          type: number
          format: long
          example: 1
        dateDebut:
          type: string
          example: 24/06/2023
        dateFin:
          type: string
          example: 30/06/2023
        nombrePersonne:
          type: integer
          example: 3
    GetReservationResponse:
      type: object
      properties:
        id:
          type: number
          format: long
          example: 1
        idCamping:
          type: number
          format: long
          example: 1
        idUtilisateur:
          type: number
          format: long
          example: 1
        dateDebut:
          type: string
          example: 24/06/2023
        dateFin:
          type: string
          example: 30/06/2023
        nombrePersonne:
          type: integer
          example: 3
    GetReservationOfUtilisateurResponse:
      type: object
      properties:
        camping:
          $ref: '#/components/schemas/GetCampingResponse'
        dateDebut:
          type: string
          example: 24/06/2023
        dateFin:
          type: string
          example: 30/06/2023
        nombrePlace:
          type: integer
          example: 3
    GetReservationsOfUtilisateurResponse:
      type: array
      items:      
        $ref: "#/components/schemas/GetReservationOfUtilisateurResponse"
    GetReservationOfCampingResponse:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/GetUtilsateurResponse'
        dateDebut:
          type: string
          example: 24/06/2023
        dateFin:
          type: string
          example: 30/06/2023
        nombrePlace:
          type: integer
          example: 3
    GetReservationsOfCampingResponse:
      type: array
      items:      
        $ref: "#/components/schemas/GetReservationOfUtilisateurResponse"
    GetEquipementsResponse:
      type: array
      items:
        type: string
        example: MACHINE_A_LAVER
    GetLogementsResponse:
      type: array
      items:
        type: string
        example: MOBILE_HOME
    GetActivite:
      type: object
      properties:
        id:
          type: integer
          format: long
          example: 1
        logo:
          type: string
          example: www.imgur.com/a/G6rU8
        lien:
          type: string
          example: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        position:
          $ref: '#/components/schemas/GPSLocationResponse'
    PostActivite:
      type: object
      properties:
        logo:
          type: string
          example: www.imgur.com/a/G6rU8
        lien:
          type: string
          example: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        position:
          $ref: '#/components/schemas/GPSLocationResponse'
